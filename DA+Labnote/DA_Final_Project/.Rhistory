lasso_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df12
coef(lasso_df12)
pred <- ifelse(predict(lasso_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_lasso <- mean((pred - tst12$y)^2)
MSE_df12_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df12
pred <- ifelse(predict(ridge_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_ridge <- mean((pred - tst12$y)^2)
MSE_df12_ridge
X_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn12)[,-1]
Xtst_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = tst12)[,-1]
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
lasso_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df12
coef(lasso_df12)
pred <- ifelse(predict(lasso_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_lasso <- mean((pred - tst12$y)^2)
MSE_df12_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df12
pred <- ifelse(predict(ridge_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_ridge <- mean((pred - tst12$y)^2)
MSE_df12_ridge
X_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn12)[, -1]
Xtst_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = tst12)[,-1]
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
lasso_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df12
coef(lasso_df12)
pred <- ifelse(predict(lasso_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_lasso <- mean((pred - tst12$y)^2)
MSE_df12_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df12
pred <- ifelse(predict(ridge_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_ridge <- mean((pred - tst12$y)^2)
MSE_df12_ridge
df12_train <- read.csv("./dataset/dataset12_train.csv")
df12_test <- read.csv("./dataset/dataset12_test.csv")
df12_train
summary(df12_train$y)
ggcorrplot(cor(df12_train), lab = T, lab_size = 2)
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df12_train)
set.seed(42)
data_split_df12 <- initial_split(df12_train, prop = 0.9)
trn12 <- training(data_split_df12)
tst12 <- testing(data_split_df12)
X_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = trn12)[, -1]
Xtst_df12 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = tst12)[,-1]
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
lasso_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df12
coef(lasso_df12)
pred <- ifelse(predict(lasso_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_lasso <- mean((pred - tst12$y)^2)
MSE_df12_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df12 <- glmnet(X_df12, trn12$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df12
pred <- ifelse(predict(ridge_df12, newx = Xtst_df12, type = "response") > 0.5, 1, 0)
MSE_df12_ridge <- mean((pred - tst12$y)^2)
MSE_df12_ridge
lda_df12 <- lda(y ~ ns(x6) + ns(x9), data = trn12)
lda_df12
MSE_df12_lda <- mean((as.numeric(predict(lda_df12, tst12)$class) - 1 - tst12$y)^2)
MSE_df12_lda
qda_df12 <- qda(y ~ ns(x6) + ns(x9), data = trn12)
qda_df12
MSE_df12_qda <- mean((as.numeric(predict(qda_df12, tst12)$class) - 1 - tst12$y)^2)
MSE_df12_qda
NBayes_df12 <- naiveBayes(y ~ x4 + x6 + x9, data = trn12)
NBayes_df12
MSE_df12_NBayes <- mean((as.numeric(predict(NBayes_df12, tst12, type = "class"))-1-tst12$y)^2)
MSE_df12_NBayes
MSE_df12_lasso
MSE_df12_ridge
MSE_df12_NBayes
MSE_df12_lda
MSE_df12_qda
predict(lda_df12, newdata = df12_test)
predict(lda_df12, newdata = df12_test)$class
MSE_df12_lasso
MSE_df12_ridge
MSE_df12_NBayes
MSE_df12_lda
MSE_df12_qda
final_csv[,13] <- predict(lda_df12, newdata = df12_test)$class
df13_train <- read.csv("./dataset/dataset13_train.csv")
df13_test <- read.csv("./dataset/dataset13_test.csv")
df13_train
summary(df13_train$y)
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df13_train)
ggcorrplot(cor(df13_train), lab = T, lab_size = 2)
set.seed(42)
data_split_df13 <- initial_split(df13_train, prop = 0.9)
trn13 <- training(data_split_df13)
tst13 <- testing(data_split_df13)
X_df13 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = trn13)[, -1]
Xtst_df13 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = tst13)[,-1]
set.seed(42)
cv.out <- cv.glmnet(X_df13, trn13$y, family = 'binomial', alpha = 1, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
lasso_df13 <- glmnet(X_df13, trn13$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df13
coef(lasso_df13)
pred <- ifelse(predict(lasso_df13, newx = Xtst_df13, type = "response") > 0.5, 1, 0)
MSE_df13_lasso <- mean((pred - tst13$y)^2)
MSE_df13_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df13, trn13$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df13 <- glmnet(X_df13, trn13$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df13
pred <- ifelse(predict(ridge_df13, newx = Xtst_df13, type = "response") > 0.5, 1, 0)
MSE_df13_ridge <- mean((pred - tst13$y)^2)
MSE_df13_ridge
NBayes_df13 <- naiveBayes(y ~ x1 + x2 + x4 + x5 + x6 + x8, data = trn13)
NBayes_df13
MSE_df13_NBayes <- mean((as.numeric(predict(NBayes_df13, tst13, type = "class"))-1-tst13$y)^2)
MSE_df13_NBayes
MSE_df13_lasso
MSE_df13_ridge
MSE_df13_NBayes
final_csv[, 14] <- predict(NBayes_df13, df13_test, type = "class")
View(final_csv)
df16_train <- read.csv("./dataset/dataset16_train.csv")
df16_test <- read.csv("./dataset/dataset16_test.csv")
df16_train
summary(df16_train$y)
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df16_train)
ggcorrplot(cor(df16_train), lab = T, lab_size = 2)
set.seed(42)
data_split_df16 <- initial_split(df16_train, prop = 0.9)
trn16 <- training(data_split_df16)
tst16 <- testing(data_split_df16)
X_df16 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = trn16)[, -1]
Xtst_df16 <- model.matrix(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = tst16)[,-1]
set.seed(42)
cv.out <- cv.glmnet(X_df16, trn16$y, family = 'binomial', alpha = 1, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
lasso_df16 <- glmnet(X_df16, trn16$y, family = 'binomial', alpha = 1, lambda = bestlambda)
lasso_df16
coef(lasso_df16)
pred <- ifelse(predict(lasso_df16, newx = Xtst_df16, type = "response") > 0.5, 1, 0)
MSE_df16_lasso <- mean((pred - tst16$y)^2)
MSE_df16_lasso
set.seed(42)
cv.out <- cv.glmnet(X_df16, trn16$y, family = 'binomial', alpha = 0, nfolds = 8)
bestlambda <- cv.out$lambda.min
bestlambda
ridge_df16 <- glmnet(X_df16, trn16$y, family = 'binomial', alpha = 0, lambda = bestlambda)
ridge_df16
pred <- ifelse(predict(ridge_df16, newx = Xtst_df16, type = "response") > 0.5, 1, 0)
MSE_df16_ridge <- mean((pred - tst16$y)^2)
MSE_df16_ridge
NBayes_df16 <- naiveBayes(y ~ x1 + x2 + x3 + x4 + x5 + ns(x6) + ns(x7) + ns(x8) + ns(x9) + ns(x10), data = trn16)
NBayes_df16
MSE_df16_NBayes <- mean((as.numeric(predict(NBayes_df16, tst16, type = "class"))-1-tst16$y)^2)
MSE_df16_NBayes
NBayes_df16 <- naiveBayes(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn16)
NBayes_df16
MSE_df16_NBayes <- mean((as.numeric(predict(NBayes_df16, tst16, type = "class"))-1-tst16$y)^2)
MSE_df16_NBayes
MSE_df16_lasso
MSE_df16_ridge
MSE_df16_NBayes
MSE_df16_lasso
MSE_df16_ridge
MSE_df16_NBayes
final_csv[, 17] <- predict(NBayes_df16, df16_test, type = "class")
final_csv <- set_names(final_csv, colnames_final)
write.csv(final_csv, file = 'test_prediction.csv', row.names = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidymodels)#model learning
library(boot)
library(caret)
library(splines)#Splines
library(pscl)# zero-inflated models
library(ggcorrplot)# for corrplot
library(e1071)#naive bayse
library(MASS)#lda, qda
library(tidyverse)
library(leaps)#linear model selection
library(gam)
library(glmnet)
library(klaR)
library(nnet)
hist(df7_train$y)
mean(df7_train$y)
var(df7_train$y)
hist(df7_train$y)
mean(df10_train$y)
var(df10_train$y)
hist(df10_train$y)
?zeroinfl
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df12_train)
mean(df10_train$y)
var(df10_train$y)
hist(df10_train$y)
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df10_train)
mean(df10_train$y)
var(df10_train$y)
hist(df10_train$y)
summary(df10$y)
summary(df10_train$y)
df10_train <- read.csv("./dataset/dataset10_train.csv")
df10_test <- read.csv("./dataset/dataset10_test.csv")
df10_train
summary(df10_train$y)
ggcorrplot(cor(df10_train), lab = T, lab_size = 2)
set.seed(42)
data_split_df10 <- initial_split(df10_train, prop = 0.9)
trn10 <- training(data_split_df10)
tst10 <- testing(data_split_df10)
pairs(~x6 + x7 + x8 + x9 + x10 + y, data = df10_train)
mean(df10_train$y)
var(df10_train$y)
hist(df10_train$y)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo1_df10)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10)
predict(zipo1_df10, newdata = tst10, type = 'response')
?predict.zeroinfl
predict(zipo1_df10, newdata = tst10, type = 'count')
zipo1_df10.fitted(tst10)
fitted(zipo1_df10, tst10)
fitted(zipo1_df10, newdata = tst10)
predict(zipo1_df10, newdata = tst10)
predict(zipo1_df10, newdata = tst10, type = 'count')
round(predict(zipo1_df10, newdata = tst10, type = 'count'))
tst10$y
round(predict(zipo1_df10, newdata = tst10, type = 'count'))
round(predict(zipo1_df10, newdata = tst10, type = 'count'))
tst10$y
mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
predict(zipo2_df10, newdata = tst10, type = 'count')
mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
MSE_df10_zipo1mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
predict(zipo2_df10, newdata = tst10, type = 'count')
mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
predict(zipo2_df10, newdata = tst10, type = 'count')
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
predict(zipo2_df10, newdata = tst10, type = 'count')
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
predict(zipo3_df10, newdata = tst10, type = 'count')
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
predict(zipo1_df10, newdata = tst10, type = 'count')
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
predict(zipo2_df10, newdata = tst10, type = 'count')
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
predict(zipo3_df10, newdata = tst10, type = 'count')
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
predict(zinegbin1_df10, newdata = tst10, type = 'count')
MSE_df10_zinegbin1_df10 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
MSE_df10_zinegbin1_df10 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
MSE_df10_zipo1
MSE_df10_zipo2
MSE_df10_zipo3
MSE_df10_zipo4
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo4_df10 <- zeroinfl(y ~ x1 + x8 + x9, data = trn10)
summary(zipo4_df10)
MSE_df10_zipo4 <- mean((round(predict(zipo4_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
MSE_df10_zinegbin1_df10 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo4_df10 <- zeroinfl(y ~ x1 + x8 + x9, data = trn10)
summary(zipo4_df10)
MSE_df10_zipo4 <- mean((round(predict(zipo4_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
MSE_df10_zinegbin1_df10 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
MSE_df10_zipo1
MSE_df10_zipo2
MSE_df10_zipo3
MSE_df10_zipo4
zinegbin1_df10
MSE_df10_zipo1
MSE_df10_zipo2
MSE_df10_zipo3
MSE_df10_zipo4
MSE_df10_zinegbin1
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x9, data = trn10)
summary(zipo1_df10)
MSE_df10_zipo1 <- mean((round(predict(zipo1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo2_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zipo2_df10)
MSE_df10_zipo2 <- mean((round(predict(zipo2_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo3_df10 <- zeroinfl(y ~ x1 + x2 + ns(x7) + ns(x8) + ns(x9), data = trn10)
summary(zipo3_df10)
MSE_df10_zipo3 <- mean((round(predict(zipo3_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zipo4_df10 <- zeroinfl(y ~ x1 + x8 + x9, data = trn10)
summary(zipo4_df10)
MSE_df10_zipo4 <- mean((round(predict(zipo4_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
MSE_df10_zipo1
MSE_df10_zipo2
MSE_df10_zipo3
MSE_df10_zipo4
MSE_df10_zinegbin1
round(predict(zipo1_df10, newdata = df10_test, type = 'count'))
final_csv[,11] <- round(predict(zipo1_df10, newdata = df10_test, type = 'count'))
View(final_csv)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
df7_train <- read.csv("./dataset/dataset7_train.csv")
df7_test <- read.csv("./dataset/dataset7_test.csv")
df7_train
summary(df7_train$y)
ggcorrplot(cor(df7_train), lab = T, lab_size = 2)
set.seed(42)
data_split_df7 <- initial_split(df7_train, prop = 0.9)
trn7 <- training(data_split_df7)
tst7 <- testing(data_split_df7)
mean(df7_train$y)
var(df7_train$y)
hist(df7_train$y)
zipo1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zipo1_df7)
summary(zipo1_df7)
zipo1_df7 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zipo1_df7)
MSE_df7_zipo1 <- mean((round(predict(zipo1_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
summary(zipo1_df7)
zipo2_df7 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x10, data = trn7)
summary(zipo2_df7)
MSE_df7_zipo2 <- mean((round(predict(zipo2_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo3_df7 <- zeroinfl(y ~ x2 + x7 + x8 + x10, data = trn7)
summary(zipo3_df7)
MSE_df7_zipo3 <- mean((round(predict(zipo3_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zinegbin1_df10 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn10)
summary(zinegbin1_df10)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df10, newdata = tst10, type = 'count')) - tst10$y)^2)
summary(zinegbin1_df10)
zipo1_df7 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zipo1_df7)
MSE_df7_zipo1 <- mean((round(predict(zipo1_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo2_df7 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x10, data = trn7)
summary(zipo2_df7)
MSE_df7_zipo2 <- mean((round(predict(zipo2_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo3_df7 <- zeroinfl(y ~ x2 + x7 + x8 + x10, data = trn7)
summary(zipo3_df7)
MSE_df7_zipo3 <- mean((round(predict(zipo3_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zinegbin1_df7 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zinegbin1_df7)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo1_df7 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zipo1_df7)
MSE_df7_zipo1 <- mean((round(predict(zipo1_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo2_df7 <- zeroinfl(y ~ x1 + x2 + x7 + x8 + x10, data = trn7)
summary(zipo2_df7)
MSE_df7_zipo2 <- mean((round(predict(zipo2_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zipo3_df7 <- zeroinfl(y ~ x2 + x7 + x8 + x10, data = trn7)
summary(zipo3_df7)
MSE_df7_zipo3 <- mean((round(predict(zipo3_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zinegbin1_df7 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn7)
summary(zinegbin1_df7)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
zinegbin2_df7 <- zeroinfl(y ~ x2 + x7 + x8 + x10, data = trn7)
summary(zinegbin2_df7)
MSE_df10_zinegbin2 <- mean((round(predict(zinegbin2_df7, newdata = tst7, type = 'count')) - tst7$y)^2)
MSE_df7_zipo1
MSE_df7_zipo2
MSE_df7_zipo3
MSE_df10_zinegbin1
MSE_df10_zinegbin2
MSE_df7_zipo1
MSE_df7_zipo2
MSE_df7_zipo3
MSE_df10_zinegbin1
MSE_df10_zinegbin2
final_csv[,8] <- round(predict(zinegbin1_df7, newdata = df7_test, type = 'count'))
View(final_csv)
zipo1_df17 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
MSE_df17_zipo1 <- mean((round(predict(zipo1_df17, newdata = tst17, type = 'count')) - tst17$y)^2)
zipo1_df17 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
zipo1_df17 <- zeroinfl(y ~ x1 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
zipo1_df17 <- zeroinfl(y ~ x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
zipo1_df17 <- zeroinfl(y ~ x1 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
MSE_df17_zipo1 <- mean((round(predict(zipo1_df17, newdata = tst17, type = 'count')) - tst17$y)^2)
zipo1_df17 <- zeroinfl(y ~ x1 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn17)
summary(zipo1_df17)
MSE_df17_zipo1 <- mean((round(predict(zipo1_df17, newdata = tst17, type = 'count')) - tst17$y)^2)
zipo2_df17 <- zeroinfl(y ~ x4 + x6 + x8 + x10, data = trn17)
summary(zipo2_df17)
MSE_df17_zipo2 <- mean((round(predict(zipo2_df17, newdata = tst17, type = 'count')) - tst17$y)^2)
MSE_df17_zipo1
MSE_df17_zipo2
final_csv[,18] <- round(predict(zipo2_df17, newdata = df17_test, type = 'count'))
View(final_csv)
zinegbin1_df20 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn20)
summary(zinegbin1_df20)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df20, newdata = tst20, type = 'count')) - tst20$y)^2)
zinegbin1_df20 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn20)
summary(zinegbin1_df20)
MSE_df10_zinegbin1 <- mean((round(predict(zinegbin1_df20, newdata = tst20, type = 'count')) - tst20$y)^2)
zinegbin2_df20 <- zeroinfl(y ~ x3 + x4 + x5 + x9, data = trn20)
summary(zinegbin2_df20)
MSE_df10_zinegbin2 <- mean((round(predict(zinegbin2_df20, newdata = tst20, type = 'count')) - tst20$y)^2)
zinegbin1_df20 <- zeroinfl(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10, data = trn20)
summary(zinegbin1_df20)
MSE_df20_zinegbin1 <- mean((round(predict(zinegbin1_df20, newdata = tst20, type = 'count')) - tst20$y)^2)
zinegbin2_df20 <- zeroinfl(y ~ x3 + x4 + x5 + x9, data = trn20)
summary(zinegbin2_df20)
MSE_df20_zinegbin2 <- mean((round(predict(zinegbin2_df20, newdata = tst20, type = 'count')) - tst20$y)^2)
MSE_df20_zinegbin1
MSE_df20_zinegbin2
MSE_df17_zipo1
MSE_df17_zipo2
final_csv[,18] <- round(predict(zipo1_df17, newdata = df17_test, type = 'count'))
