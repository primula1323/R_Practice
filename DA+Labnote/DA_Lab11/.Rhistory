for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
mean(aievec)
# t.test(aievec)
sqrt(mean((aievec - 0)**2))
eta <- 0.5
repn <- 500
eta <- 0.4
set.seed(0)
for(j in 1:repn){
data <- data_gen1(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
data_gen2 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
Z = 5 + 1 * (X1 + X2) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, Y, Z)
return (data)
}
set.seed(0)
for(j in 1:repn){
data <- data_gen2(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval[1:200]<0.05)
set.seed(0)
for(j in 1:repn){
data <- data_gen2(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
mean(aievec)
# t.test(aievec)
sqrt(mean((aievec - 0)**2))
N <- 6000
eta <- 0.45
set.seed(0)
for(j in 1:repn){
data <- data_gen2(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
mean(aievec)
# t.test(aievec)
sqrt(mean((aievec - 0)**2))
eta <- 0.5
N <- 3000
repn <- 500
aievec <- rep(NA, repn)
pval <- rep(NA, repn)
set.seed(0)
for(j in 1:repn){
data <- data_gen2(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
hist(pval)
mean(pval<0.05)
hist(aievec)
mean(aievec)
# t.test(aievec)
sqrt(mean((aievec - 0)**2))
X1 = rnorm(N)
data_gen4 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1 + X2 + X3 - X4) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2 + 2 * X3 - X4) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
N <- 10000
repn <- 200
eta <- 0.4
set.seed(0)
for(j in 1:repn){
data <- data_gen2(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
set.seed(0)
for(j in 1:repn){
data <- data_gen4(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
data_gen4 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1 + X2 + X3 - X4) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2 + 2 * X3 - 2 * X4) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
set.seed(0)
for(j in 1:repn){
data <- data_gen4(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
hist(pval)
mean(pval<0.05)
hist(aievec)
mean(aievec)
data_gen4 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1 + X2 + X3 + X4) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2 + 2 * X3 + X4) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
set.seed(0)
for(j in 1:repn){
data <- data_gen4(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
mean(pval<0.05)
hist(aievec)
mean(aievec)
# t.test(aievec)
sqrt(mean((aievec - 0)**2))
data_gen4 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1 + X2 + X3 + 2 * X4) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2 + 2 * X3 + X4) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
set.seed(0)
for(j in 1:repn){
data <- data_gen4(N)
size <- nrow(data)
i1_set <- data[(target_exposure - eta <= data$Z) & (data$Z <= target_exposure - alpha * eta),]
i1_data <- data.frame(rbind(i1_set, data), Ind = c(rep(0, nrow(i1_set)), rep(1, size)), row.names = NULL)
i1_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i1_data, method = "nearest", distance = dist_method, replace = TRUE)
i2_set <- data[(target_exposure + alpha * eta <= data$Z) & (data$Z <= target_exposure + eta),]
i2_data <- data.frame(base::rbind(i2_set, data), Ind = c(rep(0, nrow(i2_set)), rep(1, size)), row.names = NULL)
i2_match <- matchit(Ind ~ X1 + X2 + X3 + X4, data = i2_data, method = "nearest", distance = dist_method, replace = TRUE)
cross_ie <- rep(NA, nrow(i2_set) * nrow(i1_set))
num = 1
for(r in 1:nrow(i2_set)){
for(l in 1:nrow(i1_set)){
cross_ie[num] = (i1_data$Y[l] - i2_data$Y[r]) / (i1_data$Z[l] - i2_data$Z[r])
num = num + 1
}
}
data11 <-
data.frame(i1 = as.integer(i1_match$match.matrix), i2 = as.integer(i2_match$match.matrix)) %>%
mutate(num = i1 + (i2 - 1) * nrow(i1_set)) %>%
group_by(num, .drop = FALSE) %>%
summarise(weight = n()) %>%
mutate(ie = cross_ie[num]) %>%
dplyr::select(weight, ie) %>%
mutate(weight = weight/sum(weight))
sd <- sum(sqrt(data11 %>% mutate(val = weight*weight*ie*ie) %>% summarise(sum(val))))
aie <- sum(data11 %>% mutate(val = weight*ie) %>% summarise(sum(val)))
aievec[j] <- aie
pval[j] <- 2*pnorm(-abs(aie)/sd)
if (j %% 50 == 0) {print(j)}
}
hist(pval)
mean(pval<0.05)
data_gen <- function(N){
data_gen <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1) + rnorm(N, sd = 4)
Y = 3 + 15 * (-X1) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
data_gen <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
X4 = rnorm(N)
Z = 5 + 1 * (X1) + rnorm(N, sd = 4)
Y = 3 + 15 * (-X1) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, X4, Y, Z)
return (data)
}
1
1
data_gen2 <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
Z = 5 + 1 * (X1 + X2) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, Y, Z)
return (data)
}
target_exposure <- 5
1
1 <-
Z = seq(from = 3, to = 7, length = 1000)
ㅊ
d
1
2
3e2
q230wef03arsv
0
ar.fv
source("~/Dropbox/Research/Incremental/newsimul.R", echo=TRUE)
data_gen <- function(N){
X1 = rnorm(N)
X2 = rnorm(N)
X3 = rnorm(N)
Z = 5 + 1 * (X1 + X2 + X3) + rnorm(N, sd = 4)
Y = 3 + 15 * (X1 - X2 + 2 * X3) + (Z - 5) ** 2 * I(Z > 5) + rnorm(N, sd = 1)
data = data.frame(X1, X2, X3, Y, Z)
return (data)
}
da <- NHANES %>%
mutate(
male = (Gender == "male"),
white = (Race1 == "White"),
black = (Race1 == "Black"),
hs = (Education %in% c("HighSchool", "SomeCollege", "CollegeGrad")),
income_high = (HHIncome %in% c("75000-99999", "more 99999")),
income_low = (HHIncome %in% c("0-4999", "5000-9999", "10000-14999", "15000-19999", "20000-24999")),
own = (HomeOwn == "Home"),
dia_yes = (Diabetes == "Yes")
) %>%
select(
male, Age, white, black, hs, income_high, income_low, BMI, Height, own, dia_yes
)
a = NHANES %>% select(Gender, Age, Race1, Education, HomeOwn, Height, BMI, Diabetes)
a[complete.cases(a),]
a = da[complete.cases(da), ]
as
as
