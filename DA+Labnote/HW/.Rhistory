lalonde$age2 = (lalonde$age - mean(lalonde$age))^2
lalonde$age3 = (lalonde$age - mean(lalonde$age))^3
lalonde$educ2 = (lalonde$educ - mean(lalonde$educ))^2
## Propensity score estimation
ps.fit = glm(treat ~ age + age2 + age3 + educ + educ2 + black + hisp +
married + nodegree + re74 + re75, family=binomial, x=T, data=lalonde)
summary(ps.fit)
est.ps = predict(ps.fit, type = "response")
hist(est.ps[lalonde$treat==0], col = rgb(1,0,0,0.2), xlab = "Propensity Score", main = "Treated (blue) vs. Control (red)")
hist(est.ps[lalonde$treat==1], col = rgb(0,0,1,0.2), add = T)
library(optmatch)
ps.dist = match_on(est.ps, z=lalonde$treat)
psm.out = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal", distance = ps.dist)
# If you don't have a specific ps model in mind, then you could set the distance automatically.
# psm.out = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
#                    data = lalonde, method= "optimal", distance = "glm")
summary(psm.out)
plot(summary(psm.out), var.order = "unmatched")
mc.out = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal", distance = "robust_mahalanobis")
summary(mc.out, un = F)
smahal.dist = match_on(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method="rank_mahalanobis")
### caliper width = 0.2 -> doesn't work
smahal.dist2 = smahal.dist + caliper(ps.dist, width = 0.2)
mc.out2 = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal", distance = as.matrix(smahal.dist2))
### Caliper width = 1
smahal.dist3 = smahal.dist + caliper(ps.dist, width = 1)
mc.out3 = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal", distance = as.matrix(smahal.dist3))
summary(mc.out3, un = F)
smahal.dist.black = addalmostexact(as.matrix(smahal.dist), lalonde$treat, lalonde$black, mult = 10)
mc.black.out = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal",
distance = as.matrix(smahal.dist.black))
summary(mc.black.out, un = F)
table(lalonde$treat, lalonde$black)
m.full.out = matchit(treat ~ age + educ + married + black + hisp + nodegree + re74 + re75,
data= lalonde, method = "full",
distance = "glm", max.controls = 30)
summary(m.full.out, un = F)
m.full.probit.out = matchit(treat ~ age + educ + married + black + hisp + nodegree + re74 + re75,
data= lalonde, method = "full",
distance = "glm", link = "probit")
summary(m.full.probit.out, un = F)
plot(summary(m.full.probit.out), var.order = "unmatched")
## matching separate
m.exact.out = matchit(treat ~ age + educ + black + hisp + married + nodegree + re74 + re75,
data = lalonde, method= "optimal",
distance = "robust_mahalanobis", exact = ~black)
summary(m.exact.out, un = F)
## analysis
m.full = match.data(m.full.probit.out)
subclass = as.numeric(m.full$subclass)
## outcome matrix
y.fm = matrix(NA, nrow = length(unique(subclass)), ncol = max(table(subclass)))
treat1.vec = rep(NA, length(unique(subclass)))
for(i in 1:length(unique(subclass))){
temp.indicator = (subclass == i)
if(sum(m.full$treat[temp.indicator]) == 1){
y.fm[i,1] = m.full$re78[temp.indicator==1 & m.full$treat==1]
y.fm[i,(2:sum(temp.indicator))] = m.full$re78[temp.indicator==1 & m.full$treat ==0]
treat1.vec[i]= TRUE
}else{
y.fm[i,1] = m.full$re78[temp.indicator==1 & m.full$treat==0]
y.fm[i,(2:sum(temp.indicator))] = m.full$re78[temp.indicator==1 & m.full$treat==1]
treat1.vec[i]= FALSE
}
}
m.exact = match.data(m.exact.out)
y.pair = matrix(NA, nrow = length(unique(m.exact$subclass)), ncol = 2)
for(i in 1:length(unique(m.exact$subclass))){
y.pair[i,1] = m.exact$re78[m.exact$subclass == i & m.exact$treat == 1]
y.pair[i,2] = m.exact$re78[m.exact$subclass == i & m.exact$treat == 0]
}
library(sensitivityfull)
senfm(y.fm, treated1 = treat1.vec)
senfmCI(y.fm, treated1 = treat1.vec)
library(sensitivitymw)
senmw(y.pair)
senmwCI(y.pair, one.sided = F)
library("lmtest") # coeftest
library("sandwich") # vcovCL
fit.full = lm(re78 ~ treat, data = m.full, weights = weights)
coeftest(fit.full, vcov. = vcovCL, cluster = ~subclass)
fit.full.with.cov = lm(re78 ~ treat + age + educ + black + hisp +
married + nodegree + re74 + re75,
data = m.full, weights = weights)
coeftest(fit.full.with.cov, vcov. = vcovCL, cluster = ~subclass)
fit.pair = lm(re78 ~ treat, data = m.exact, weights = weights)
coeftest(fit.pair, vcov. = vcovCL, cluster = ~subclass)
boxplot(y.pair[,1] - y.pair[,2], main = "Treated-Minus-Control Differences")
df <- read.csv("welder.csv")
head(df)
df
no.adj <- matchit(welder ~ age + racc + smoker + DPC, data = df, method = NULL, distance = "glm")
df
no.adj <- matchit(welder ~ age + race + smoker + DPC, data = df, method = NULL, distance = "glm")
options(width = 100)
summary(no.adj)
View(df)
no.adj <- matchit(welder ~ age + race + smoker + DPC, data = df, method = NULL, distance = "glm")
summary(no.adj)
View(lalonde)
?matchit
no.adj <- matchit(welder ~ age + race + smoker, data = df, method = NULL, distance = "glm")
?matchit
summary(no.adj)
no.adj <- matchit(welder ~ age + race + smoker, data = df, method = NULL, distance = "glm")
?matchit
summary(no.adj)
View(df)
mean(df %>% filter(group_by(welder)) %>% summarise(mean()))
df %>% filter(group_by(welder)) %>% summarise(mean())
df %>%
group_by(welder) %>%
summarise(mean())
df %>%
group_by(welder) %>%
summarise(mean())
df %>%
group_by(welder) %>%
summarise(mean(DPC))
df %>%
group_by(welder) %>%
summarise(mean(DPC), sd(DPC))
df %>%
group_by(welder) %>%
summarise(mean(DPC), sd(DPC))
no.adj <- matchit(welder ~ age + race + smoker, data = df, method = NULL, distance = "glm")
summary(no.adj)
no.adj$estimand
no.adj$distance
no.adj$info
no.adj$model
no.adj <- matchit(welder ~ age + race + smoker, data = df, method = NULL, distance = "glm")
summary(no.adj)
df %>%
group_by(welder) %>%
summarise(mean(DPC), sd(DPC))
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 7)
summary(ps.str, un = F)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 7)
summary(ps.lm, un = F)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 7)
summary(ps.lm, un = F)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 7)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 7)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 14)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 10)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 9)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 8)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 9)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 14)
summary(ps.lm)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 9)
ps.lm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = "glm", link = "probit", subclass = 8)
summary(ps.lm)
?glm
ps.glm = glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0])
hist(estimates_ps[df$welder==1], add = T)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2))
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
summary(ps.glm)
ps.glm
summary(ps.glm)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
ps.glm
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
?matchit
ps.stra_glm <- matchit(welder ~ age + race + smoker, data = df, method = "subclass", distance = 'glm')
ps.stra_glm <- matchit(welder ~ age + race + smoker, data = df, method = "nearest", distance = "glm", link = "probit", replace = T)
summary(ps.stra_glm)
ps.stra_glm$match.matrix
ps.stra_glm <- matchit(welder ~ age + race + smoker, data = df, method = "nearest", distance = "glm", link = "probit", replace = T)
summary(ps.stra_glm)
ps.stra_glm$match.matrix
summary(ps.stra_glm, un = T)
ps.stra_glm <- matchit(welder ~ age + race + smoker, data = df, method = "nearest", distance = "glm", link = "probit", replace = T)
summary(ps.stra_glm, un = F)
ps.stra_glm
ps.stra_glm$estimand
ps.stra_glm$treat
ps.stra_glm$model
library(marginaleffects)
strad_data <- match.data(ps.stra_glm)
View(strad_data)
?match.data
?lm
library(marginaleffects)
strad_data <- match.data(ps.stra_glm)
fit_DPC_treat <- lm(DPC ~ welder, data = strad_data, weights = weights)
avg_comparisons(fit_DPC_treat, variables = "welder", vcov = ~subclass, newdata = subset(strad_data, welder == 1), wts = "weights")
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
?matchit
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, method = "nearest", distance = ps.glm, link = "probit", replace = T)
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = ps.glm, link = "probit", replace = T)
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = ps.glm, replace = T)
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = ps.glm, replace = T)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
estimates_ps = predict(ps.glm, type = "response")
estimates_ps = predict(ps.glm, type = "response")
estimates_ps
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.strata_glm$match.matrix
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.strata_glm$match.matrix
strata_data <- match.data(ps.strata_glm)
fit_DPC_treat2 <- lm(DPC ~ welder, data = strata_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(strata_data, welder == 1), wts = "weights")
library(marginaleffects)
strad_data <- match.data(ps.stra_glm)
fit_DPC_treat <- lm(DPC ~ welder, data = strad_data, weights = weights)
avg_comparisons(fit_DPC_treat, variables = "welder", newdata = subset(strad_data, welder == 1), wts = "weights")
strata_data <- match.data(ps.strata_glm)
fit_DPC_treat2 <- lm(DPC ~ welder, data = strata_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", newdata = subset(strata_data, welder == 1), wts = "weights")
ps.strata_glm2 <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T, subclass = 3)
summary(ps.strata_glm2, un = F)
strata_data2 <- match.data(ps.strata_glm2)
fit_DPC_treat2 <- lm(DPC ~ welder, data = strata_data2, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", newdata = subset(strata_data2, welder == 1), wts = "weights")
ps.strata_glm2 <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T, subclass = 3)
summary(ps.strata_glm2, un = F)
strata_data2 <- match.data(ps.strata_glm2)
fit_DPC_treat2 <- lm(DPC ~ welder, data = strata_data2, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(strata_data2, welder == 1), wts = "weights")
ps.strata_glm2 <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T, subclass = 3)
summary(ps.strata_glm2, un = F)
strata_data2 <- match.data(ps.strata_glm2)
fit_DPC_treat2 <- lm(DPC ~ welder, data = strata_data2, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(strata_data2, welder == 1), wts = "weights")
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
ps.strata_glm <- matchit(welder ~ age + race + smoker, data = df, distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.strata_glm$match.matrix
ps.mat11_7 <- matchit(welder ~ age + race + smoker, data = df, method = 'nearest', distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.mat11_7$match.matrix
ps.mat11_7 <- matchit(welder ~ age + race + smoker, data = df, method = 'nearest', distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.mat11_7$match.matrix
library(marginaleffects)
mat117_data <- match.data(ps.mat11_7)
fit_DPC_treat <- lm(DPC ~ welder, data = mat117_data, weights = weights)
avg_comparisons(fit_DPC_treat, variables = "welder", newdata = subset(mat117_data, welder == 1), wts = "weights")
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(mat113_data, welder == 1), wts = "weights")
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(mat113_data, welder == 1), wts = "weights")
estimates_ps = predict(ps.glm, type = "response")
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps = predict(ps.glm, type = "response")
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
estimates_ps <- ps.glm$fitted.values
estimates_ps
estimates_ps <- predict(ps.glm, type = "response")
estimates_ps
estimates_ps <- predict(ps.glm, type = "response")
estimates_ps
ps.mat11_7 <- matchit(welder ~ age + race + smoker, data = df, method = 'nearest', distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.mat11_7$match.matrix
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = ~subclass, newdata = subset(mat113_data, welder == 1), wts = "weights")
ps.glm$fitted.values
ps.glm$coefficients
model.matrix(ps.glm)
model.matrix(ps.glm)*ps.glm$coefficients
model.matrix(ps.glm)%*%ps.glm$coefficients
model.matrix(ps.glm)%*%ps.glm$coefficients
ps.glm$fitted.values
model.matrix(ps.glm)
model.matrix(ps.glm[-0])
model.matrix(ps.glm[1:])
model.matrix(ps.glm)
model.matrix(ps.glm)[2:]
model.matrix(ps.glm)[2:
model.matrix(ps.glm)2:
model.matrix(ps.glm)
model.matrix(ps.glm)[-1]
model.matrix(ps.glm)[-1:]
model.matrix(ps.glm)[-1]
model.matrix(ps.glm)[-2]
model.matrix(ps.glm)[-3]
model.matrix(ps.glm)[-4]
model.matrix(ps.glm)[-5]
model.matrix(ps.glm)[-1]
model.matrix(ps.glm)[-2]
model.matrix(ps.glm)[-3]
model.matrix(ps.glm)[-1:]
model.matrix(ps.glm)[-:0]
model.matrix(ps.glm)[,-1]
model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients
model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[2:]
model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[2:]
ps.glm$coefficients[2:]
ps.glm$coefficients$2
ps.glm$coefficients
ps.glm$coefficients$age
ps.glm$coefficients
pluck(ps.glm$coefficients, 1)
pluck(ps.glm$coefficients, 2:5)
ps.glm$coefficients
ps.glm$coefficients(2,5)
ps.glm$coefficients(2)
ps.glm$coefficients
ps.glm$coefficientsp[age, raceC, raceCC, smokerY]
ps.glm$coefficientsp['age', 'raceC', 'raceCC', 'smokerY']
ps.glm$coefficientsp[c(2:5)]
ps.glm$coefficientsp[c(2:5)]
ps.glm$coefficients[c(2:5)]
model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)]
expit(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)])
library(expit)
install.packages('expit')
library(expit)
install.packages('expit')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MatchIt)
library(sandwich)
library(optmatch)
exp(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)])
exp((-1)*(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)]))
1/(1+exp((-1)*(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)])))
ps.glm$fitted.values
1/(1+exp((-1)*(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)])))
ps.glm <- glm(welder ~ age + race + smoker, data = df, family=binomial, x=T)
summary(ps.glm)
estimates_ps <- ps.glm$fitted.values
#1/(1+exp((-1)*(model.matrix(ps.glm)[,-1]%*%ps.glm$coefficients[c(2:5)])))
hist(estimates_ps[df$welder==0], col = rgb(1, 0, 0, 0.2), xlab = "Propensity Score", main = "Treated (green) vs. Control (red)")
hist(estimates_ps[df$welder==1], col = rgb(0, 1, 0, 0.2), add = T)
ps.mat11_7 <- matchit(welder ~ age + race + smoker, data = df, method = 'nearest', distance = estimates_ps, replace = T)
summary(ps.strata_glm, un = F)
ps.mat11_7$match.matrix
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", newdata = subset(mat113_data, welder == 1), wts = "weights")
library(marginaleffects)
mat117_data <- match.data(ps.mat11_7)
fit_DPC_treat <- lm(DPC ~ welder, data = mat117_data, weights = weights)
avg_comparisons(fit_DPC_treat, variables = "welder", newdata = subset(mat117_data, welder == 1), wts = "weights")
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, replace = T, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", newdata = subset(mat113_data, welder == 1), wts = "weights")
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", newdata = subset(mat113_data, welder == 1), wts = "weights")
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATE', subclass = 3)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATE', subclass = 3)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATE', subclass = 3)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATC', subclass = 3)
summary(ps.mat12_3, un = F)
mat123_data <- match.data(ps.mat12_3)
fit_DPC_treat3 <- lm(DPC ~ welder, data = mat123_data, weights = weights)
avg_comparisons(fit_DPC_treat3, variables = "welder", newdata = subset(mat123_data, welder == 1), wts = "weights")
Wmodel <- weightit(welder ~ age + race + smoker, data = df, methods = 'nearest', estimand = 'ATE')
library(cobalt)
bal.tab(Wmodel, un = T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MatchIt)
library(sandwich)
library(optmatch)
library(cobalt)
Wmodel <- weightit(welder ~ age + race + smoker, data = df, methods = 'nearest', estimand = 'ATE')
bal.tab(Wmodel, un = T)
W_data <- match.data(Wmodel)
W_data <- cbind(df, Wmodel$weights)
View(W_data)
Wmodel <- weightit(welder ~ age + race + smoker, data = df, methods = 'nearest', estimand = 'ATE')
bal.tab(Wmodel, un = T)
W_data <- cbind(df, Wmodel$weights)
fit_Wtreat <- lm(DPC ~ welder, data = W_data, weights = weights)
Wmodel <- weightit(welder ~ age + race + smoker, data = df, methods = 'nearest', estimand = 'ATE')
bal.tab(Wmodel, un = T)
W_data <- cbind(df, Wmodel$weights)
fit_Wtreat <- lm(DPC ~ welder, data = W_data, weights = W_data$weights)
avg_comparisons(fit_Wtreat, variables = "welder", newdata = subset(W_data, welder == 1), wts = "weights")
W_data <- df
W_data$ipw.weight <- Wmodel$weights
W_data <- df
W_data$ipw.weight <- Wmodel$weights
fit_Wtreat <- lm(DPC ~ welder, data = W_data, weights = ipw.weights)
W_data <- df
W_data$ipw.weights <- Wmodel$weights
fit_Wtreat <- lm(DPC ~ welder, data = W_data, weights = ipw.weights)
avg_comparisons(fit_Wtreat, variables = "welder", vcov = 'HC3', newdata = subset(W_data, welder == 1), wts = 'ipw.weights')
Wmodel <- weightit(welder ~ age + race + smoker, data = df, methods = 'nearest', estimand = 'ATE', distance = estimates_ps)
bal.tab(Wmodel, un = T)
W_data <- df
W_data$ipw.weights <- Wmodel$weights
fit_Wtreat <- lm(DPC ~ welder, data = W_data, weights = ipw.weights)
avg_comparisons(fit_Wtreat, variables = "welder", vcov = 'HC3', newdata = subset(W_data, welder == 1), wts = 'ipw.weights')
ps.mat11_7$weights
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MatchIt)
library(sandwich)
library(optmatch)
library(cobalt)
library(marginaleffects)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = 'HC3' , newdata = subset(mat113_data, welder == 1), wts = "weights")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MatchIt)
library(WeightIt)
library(sandwich)
library(optmatch)
library(cobalt)
library(marginaleffects)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATE', subclass = 3)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'full', distance = estimates_ps, estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'full', distance = glm, link = probit, estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'full', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATC', subclass = 3, replace = T)
summary(ps.mat12_3, un = F)
mat123_data <- match.data(ps.mat12_3)
fit_DPC_treat3 <- lm(DPC ~ welder, data = mat123_data, weights = weights)
avg_comparisons(fit_DPC_treat3, variables = "welder", newdata = subset(mat123_data, welder == 1), wts = "weights")
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', estimand = 'ATE', subclass = 3, replace = T)
summary(ps.mat12_3, un = F)
mat123_data <- match.data(ps.mat12_3)
fit_DPC_treat3 <- lm(DPC ~ welder, data = mat123_data, weights = weights)
avg_comparisons(fit_DPC_treat3, variables = "welder", newdata = subset(mat123_data, welder == 1), wts = "weights")
ps.mat12_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = 'glm', link = 'probit', subclass = 3, replace = T)
summary(ps.mat12_3, un = F)
mat123_data <- match.data(ps.mat12_3)
fit_DPC_treat3 <- lm(DPC ~ welder, data = mat123_data, weights = weights)
avg_comparisons(fit_DPC_treat3, variables = "welder", newdata = subset(mat123_data, welder == 1), wts = "weights")
ps.mat11_3 <- matchit(welder ~ age + race + smoker, data = df, methods = 'nearest', distance = estimates_ps, subclass = 3)
summary(ps.mat11_3, un = F)
mat113_data <- match.data(ps.mat11_3)
fit_DPC_treat2 <- lm(DPC ~ welder, data = mat113_data, weights = weights)
avg_comparisons(fit_DPC_treat2, variables = "welder", vcov = 'HC3', newdata = subset(mat113_data, welder == 1), wts = "weights")
