fly %>% filter(between(arr_delay, 50, 100))#includes 50 and 100.
fly %>%
filter(is.na(dep_time)) %>%
count()
fly %>%
arrange(year)
fly %>%
arrange(year, month)#default : ascending
fly %>%
arrange(desc(year), desc(month))#NAs are always in the end.
#Q1
arrange(fly, desc(is.na(dep_time)))
#Q2
fly %>%
arrange(desc(dep_delay))
select(fly, year, month, day)
select(fly, -(year:day))
select(fly, year:day)
select(fly, c(1,3))
select(fly, seq(1,5,2))
select(fly, year)
?select
select(fly, !(year:day))
select(fly, starts_with('arr'))
select(fly, end_with('delay'))
select(fly, ends_with('delay'))
select(fly, contains('dep'))
select(fly, matches('..._time'))
select(fly, matches('._time'))
knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('nycflights13')
library('hms')
library('haven')#for reading spss, sas files.
select(fly, num_range('x', 1:3))
select(flights, time_hour, air_time)
select(flights, time_hour, air_time, everything())
#Q2
select(fly, air_time, air_time)
select(fly, arr_time, arr_time)
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
select(fly, any_of(vars))
select(fly, arr_time, arr_time, everything())
select(fly, one_of(vars))
select(flights, contains("TIME"))
select(flights, contains("TIME", ignore.case = FALSE))
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
gs = gain * speed
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gs = gain * speed
)
transmutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gs = gain * speed #you can refer to variables you've just created
)
transmute(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
gs = gain * speed #you can refer to variables you've just created
)
lag(1:10)
lead(1:10)
cumsum(1:10)
cummean(1:10)
cumprod(1:10)
cummin(1:10)
cummax(1:10)
min_rank(c(1, 2, 2, NA, 3, 4))
min_rank(desc(c(1, 2, 2, NA, 3, 4)))
#Q1
fly %>%
mutate(dep_time_hour = dep_time%%100)
#Q1
fly %>%
mutate(dep_time_hour = dep_time%/%100)
#Q1
fly %>%
mutate(dep_time_hour = dep_time%/%100, dep_time_minute = dep_time%%100) %>%
transmute(dep_time_mutated = dep_time_hour * 60 + dep_time_minute)
View(fly)
#Q1
fly %>%
mutate(dep_time_hour = dep_time%/%100, dep_time_minute = dep_time%%100) %>%
mutate(dep_time_mutated = dep_time_hour * 60 + dep_time_minute) %>%
select(carrier:dest, dep_time_mutated)
#Q1
fly %>%
mutate(dep_time_hour = dep_time%/%100, dep_time_minute = dep_time%%100) %>%
mutate(dep_time_mutated = dep_time_hour * 60 + dep_time_minute) %>%
select(carrier:dest, year:time, dep_time_mutated)
#Q1
fly %>%
mutate(dep_time_hour = dep_time%/%100, dep_time_minute = dep_time%%100) %>%
mutate(dep_time_mutated = dep_time_hour * 60 + dep_time_minute) %>%
select(carrier:dest, year:day, dep_time_mutated)
fly %>%
mutate(diff = arr_time - dep_time) %>%
select(air_time, diff)
fly %>%
mutate(dt = sched_dep_time + dep_delay) %>%
select(dt, dep_time) %>%
filter(dt != dep_time)
fly %>%
mutate(dt = sched_dep_time + dep_delay) %>%
select(dt, dep_time) %>%
filter(dt != dep_time) %>%
ggplot() +
geom_point(mapping = aes(x = dt, y = dep_time))
fly %>%
mutate(dt = sched_dep_time + dep_delay) %>%
select(dt, dep_time) %>%
filter(dt != dep_time) %>%
ggplot() +
geom_point(mapping = aes(x = dt, y = dep_time)) +
coord_fixed()
#Q4
fly %>%
mutate(dr = rank(dep_delay))
#Q4
fly %>%
mutate(dr = rank(dep_delay)) %>%
arrange(desc(dr))
#Q4
fly %>%
mutate(drop.na(dep_delay), dr = rank(dep_delay)) %>%
arrange(desc(dr))
#Q4
fly %>%
mutate(drop_na(dep_delay), dr = rank(dep_delay)) %>%
arrange(desc(dr))
#Q4
fly %>%
mutate(dr = rank(dep_delay)) %>%
arrange(desc(dr))
#Q4
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
arrange(dr)
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
slice(10)
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
slice(1:10)
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
top_n(10)
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
top_n(10, dr)
#Q4
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
arrange(dr)
fly %>%
mutate(dr = min_rank(desc(dep_delay))) %>%
slice(1:10)
fly %>%
mutate(dr = min_rank(dep_delay)) %>%
top_n(10, dr)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(delay, count > 20, dest != "HNL")
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL")
View(delay)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL") +
ggplot(mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL") +
ggplot() +
geom_point(mapping = aes(x = dist, y = delay, size = count), alpha = 1/3) +
geom_smooth(mapping = aes(x = dist, y = delay), se = FALSE)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL") %>%
ggplot() +
geom_point(mapping = aes(x = dist, y = delay, size = count), alpha = 1/3) +
geom_smooth(mapping = aes(x = dist, y = delay), se = FALSE)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL") %>%
ggplot() +
geom_point(mapping = aes(x = dist, y = delay, size = count), alpha = 1/3) +
geom_smooth(mapping = aes(x = dist, y = delay), se = FALSE)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL") %>%
ggplot(mapping = aes(x = dist, y = delay)) +
geom_point(mapping = aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(mapping = aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(mapping = aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
library('Lahman') #only for data of baseball players
bat <- as_tibble(Lahman::Batting)
View(bat)
bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE)
ab = sum(AB, na.rm = TRUE)
bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
vaild_bat <- bat %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
vaild_bat <- bat %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
bats <- bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
vaild_bat <- bat %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
bats <- bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
vaild_bat <- bats %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
bats <- bat %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
vaild_bat <- bats %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
vaild_bat <- bats %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
bats %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
?mad
#Q1 Brainstorm at least 5 different ways to assess the typical delay characteristics of a group of flights.
not_cancelled %>%
group_by(tailnum) %>%
summarise(mean(arr_delay))
not_cancelled %>% count(dest)
not_cancelled %>% count(tailnum, wt = distance)
not_cancelled %>% group_by(tailnum) %>% summarise(sum(distance, na.rm = TRUE))
not_cancelled %>% count(tailnum, wt = distance)
not_cancelled %>% group_by(tailnum) %>% summarise(sum(distance, na.rm = TRUE))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n(is.na())/n())
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n(is.na(arr_delay))/n())
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n(is.na(arr_delay))/n(arr_delay))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n()/n())
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n()/n(), q = count(is.na(arr_delay)))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = n()/n(), q = sum(is.na(arr_delay)))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(p = sum(is.na(arr_delay)))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(n_cancelled = sum(is.na(arr_delay)), prop_cancelled = n_cancelled/n())
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(n_cancelled = sum(is.na(arr_delay)), prop_cancelled = n_cancelled/n(), avg_delay = mean(arr_delay, na.rm = TRUE))
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(n_cancelled = sum(is.na(arr_delay)), prop_cancelled = n_cancelled/n(), avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot() +
geom_point(mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_smooth(se = FALSE)
#Q4
fly %>%
group_by(year, month, day) %>%
summarise(n_cancelled = sum(is.na(arr_delay)), prop_cancelled = n_cancelled/n(), avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_smooth(se = FALSE)
#Q4
fly2 <- fly %>%
group_by(year, month, day) %>%
summarise(n_cancelled = sum(is.na(arr_delay)), prop_cancelled = n_cancelled/n(), avg_delay = mean(arr_delay, na.rm = TRUE))
fly2
ggplot(fly2, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(fly2, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_line()
ggplot(fly2, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_abline()
ggplot(fly2, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_smooth()
ggplot(fly2, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_smooth(se = FALSE)
fly3 <- fly2 %>% filter(prop_cancelled < 0.4)
ggplot(fly3, mapping = aes(x = prop_cancelled, y = avg_delay)) +
geom_point() +
geom_smooth(se = FALSE)
#Q5
not_cancelled %>%
group_by(carrier) %>%
summarise(mean(arr_delay, na.rm = TRUE))
#Q5
not_cancelled %>%
group_by(carrier) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(avg_delay)
not_cancelled %>%
group_by(carrier, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n)
#Q5
not_cancelled %>%
group_by(carrier) %>%
summarise(avg_delay = mean(arr_delay, na.rm = TRUE)) %>%
arrange(avg_delay)
## 다시풀기
not_cancelled %>%
group_by(carrier, origin, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n)
## 다시풀기
not_cancelled %>%
group_by(carrier, origin, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n, rk = rank(avg_delay))
## 다시풀기
not_cancelled %>%
group_by(carrier, origin, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n) %>%
ungroup()
## 다시풀기
not_cancelled %>%
group_by(carrier, origin, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n, rk = rank(avg_delay)) %>%
ungroup()
ungroup()
## 다시풀기
not_cancelled %>%
group_by(carrier, origin, dest) %>%
summarise(n = n(), sum = sum(arr_delay, na.rm = TRUE), avg_delay = sum/n) %>%
mutate(rk = rank(avg_delay))
## 다시풀기
fly %>%
filter(!is.na(arr_delay)) %>%
group_by(carrier, origin, dest) %>%
summarise(sud = sum(arr_delay), n_f = n()) %>%
group_by(origin, dest) %>%
mutate(tad = sum(sud), tf = sum(n_f))
